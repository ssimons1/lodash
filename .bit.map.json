/* #THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. */

{
    "component/add": {
        "files": [
            {
                "relativePath": "add.js",
                "test": false,
                "name": "add.js"
            }
        ],
        "mainFile": "add.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-symbol",
            "internal/get-tag",
            "internal/base-to-string",
            "internal/base-to-number",
            "internal/create-math-operation"
        ]
    },
    "component/after": {
        "files": [
            {
                "relativePath": "after.js",
                "test": false,
                "name": "after.js"
            }
        ],
        "mainFile": "after.js",
        "origin": "AUTHORED"
    },
    "component/at": {
        "files": [
            {
                "relativePath": "at.js",
                "test": false,
                "name": "at.js"
            }
        ],
        "mainFile": "at.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/cast-path",
            "internal/base-get",
            "component/get",
            "internal/string-to-path",
            "internal/is-key",
            "internal/to-key",
            "internal/base-at"
        ]
    },
    "component/attempt": {
        "files": [
            {
                "relativePath": "attempt.js",
                "test": false,
                "name": "attempt.js"
            }
        ],
        "mainFile": "attempt.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-plain-object",
            "component/is-object-like",
            "component/is-error"
        ]
    },
    "component/before": {
        "files": [
            {
                "relativePath": "before.js",
                "test": false,
                "name": "before.js"
            }
        ],
        "mainFile": "before.js",
        "origin": "AUTHORED"
    },
    "component/camel-case": {
        "files": [
            {
                "relativePath": "camelCase.js",
                "test": false,
                "name": "camelCase.js"
            }
        ],
        "mainFile": "camelCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/capitalize",
            "internal/cast-slice",
            "component/slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/create-case-first",
            "component/upper-first",
            "internal/string-to-array",
            "component/words",
            "internal/unicode-words"
        ]
    },
    "component/capitalize": {
        "files": [
            {
                "relativePath": "capitalize.js",
                "test": false,
                "name": "capitalize.js"
            }
        ],
        "mainFile": "capitalize.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/create-case-first",
            "component/upper-first"
        ]
    },
    "component/cast-array": {
        "files": [
            {
                "relativePath": "castArray.js",
                "test": false,
                "name": "castArray.js"
            }
        ],
        "mainFile": "castArray.js",
        "origin": "AUTHORED"
    },
    "component/ceil": {
        "files": [
            {
                "relativePath": "ceil.js",
                "test": false,
                "name": "ceil.js"
            }
        ],
        "mainFile": "ceil.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/create-round"
        ]
    },
    "component/chunk": {
        "files": [
            {
                "relativePath": "chunk.js",
                "test": false,
                "name": "chunk.js"
            }
        ],
        "mainFile": "chunk.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/clamp": {
        "files": [
            {
                "relativePath": "clamp.js",
                "test": false,
                "name": "clamp.js"
            }
        ],
        "mainFile": "clamp.js",
        "origin": "AUTHORED"
    },
    "component/compact": {
        "files": [
            {
                "relativePath": "compact.js",
                "test": false,
                "name": "compact.js"
            }
        ],
        "mainFile": "compact.js",
        "origin": "AUTHORED"
    },
    "component/cond": {
        "files": [
            {
                "relativePath": "cond.js",
                "test": false,
                "name": "cond.js"
            }
        ],
        "mainFile": "cond.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/map"
        ]
    },
    "component/conforms-to": {
        "files": [
            {
                "relativePath": "conformsTo.js",
                "test": false,
                "name": "conformsTo.js"
            }
        ],
        "mainFile": "conformsTo.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/base-conforms-to",
            "internal/is-index",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "component/count-by": {
        "files": [
            {
                "relativePath": "countBy.js",
                "test": false,
                "name": "countBy.js"
            }
        ],
        "mainFile": "countBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-assign-value",
            "internal/array-reduce",
            "internal/base-reduce",
            "internal/base-each",
            "internal/base-for-own",
            "component/reduce",
            "internal/base-for"
        ]
    },
    "component/create": {
        "files": [
            {
                "relativePath": "create.js",
                "test": false,
                "name": "create.js"
            }
        ],
        "mainFile": "create.js",
        "origin": "AUTHORED"
    },
    "component/debounce": {
        "files": [
            {
                "relativePath": "debounce.js",
                "test": false,
                "name": "debounce.js"
            }
        ],
        "mainFile": "debounce.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object"
        ]
    },
    "component/deburr": {
        "files": [
            {
                "relativePath": "deburr.js",
                "test": false,
                "name": "deburr.js"
            }
        ],
        "mainFile": "deburr.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-property-of",
            "internal/deburr-letter"
        ]
    },
    "component/defaults": {
        "files": [
            {
                "relativePath": "defaults.js",
                "test": false,
                "name": "defaults.js"
            }
        ],
        "mainFile": "defaults.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq"
        ]
    },
    "component/default-to": {
        "files": [
            {
                "relativePath": "defaultTo.js",
                "test": false,
                "name": "defaultTo.js"
            }
        ],
        "mainFile": "defaultTo.js",
        "origin": "AUTHORED"
    },
    "component/defer": {
        "files": [
            {
                "relativePath": "defer.js",
                "test": false,
                "name": "defer.js"
            }
        ],
        "mainFile": "defer.js",
        "origin": "AUTHORED"
    },
    "component/delay": {
        "files": [
            {
                "relativePath": "delay.js",
                "test": false,
                "name": "delay.js"
            }
        ],
        "mainFile": "delay.js",
        "origin": "AUTHORED"
    },
    "component/difference": {
        "files": [
            {
                "relativePath": "difference.js",
                "test": false,
                "name": "difference.js"
            }
        ],
        "mainFile": "difference.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/map",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "internal/base-find-index",
            "internal/set-cache",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/cache-has",
            "internal/array-includes-with",
            "component/is-array-like-object",
            "internal/base-difference",
            "internal/is-flattenable",
            "internal/base-flatten"
        ]
    },
    "component/difference-by": {
        "files": [
            {
                "relativePath": "differenceBy.js",
                "test": false,
                "name": "differenceBy.js"
            }
        ],
        "mainFile": "differenceBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/difference-with": {
        "files": [
            {
                "relativePath": "differenceWith.js",
                "test": false,
                "name": "differenceWith.js"
            }
        ],
        "mainFile": "differenceWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/divide": {
        "files": [
            {
                "relativePath": "divide.js",
                "test": false,
                "name": "divide.js"
            }
        ],
        "mainFile": "divide.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-number",
            "internal/base-to-string",
            "internal/create-math-operation"
        ]
    },
    "component/drop": {
        "files": [
            {
                "relativePath": "drop.js",
                "test": false,
                "name": "drop.js"
            }
        ],
        "mainFile": "drop.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/drop-right": {
        "files": [
            {
                "relativePath": "dropRight.js",
                "test": false,
                "name": "dropRight.js"
            }
        ],
        "mainFile": "dropRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/drop-right-while": {
        "files": [
            {
                "relativePath": "dropRightWhile.js",
                "test": false,
                "name": "dropRightWhile.js"
            }
        ],
        "mainFile": "dropRightWhile.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/base-while",
            "internal/base-while"
        ]
    },
    "component/drop-while": {
        "files": [
            {
                "relativePath": "dropWhile.js",
                "test": false,
                "name": "dropWhile.js"
            }
        ],
        "mainFile": "dropWhile.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/base-while"
        ]
    },
    "component/each": {
        "files": [
            {
                "relativePath": "each.js",
                "test": false,
                "name": "each.js"
            }
        ],
        "mainFile": "each.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "component/for-each",
            "internal/array-each"
        ]
    },
    "component/each-right": {
        "files": [
            {
                "relativePath": "eachRight.js",
                "test": false,
                "name": "eachRight.js"
            }
        ],
        "mainFile": "eachRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-right",
            "internal/array-each-right",
            "internal/base-each-right",
            "internal/base-for-own-right",
            "component/for-each-right"
        ]
    },
    "component/ends-with": {
        "files": [
            {
                "relativePath": "endsWith.js",
                "test": false,
                "name": "endsWith.js"
            }
        ],
        "mainFile": "endsWith.js",
        "origin": "AUTHORED"
    },
    "component/eq": {
        "files": [
            {
                "relativePath": "eq.js",
                "test": false,
                "name": "eq.js"
            }
        ],
        "mainFile": "eq.js",
        "origin": "AUTHORED"
    },
    "component/eq-deep": {
        "files": [
            {
                "relativePath": "eqDeep.js",
                "test": false,
                "name": "eqDeep.js"
            }
        ],
        "mainFile": "eqDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/set-cache",
            "internal/cache-has",
            "component/filter",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "component/is-object-like",
            "internal/stack",
            "internal/equal-arrays",
            "component/some",
            "internal/set-to-array",
            "internal/map-to-array",
            "internal/equal-by-tag",
            "internal/get-symbols",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "internal/base-is-equal"
        ]
    },
    "component/escape": {
        "files": [
            {
                "relativePath": "escape.js",
                "test": false,
                "name": "escape.js"
            }
        ],
        "mainFile": "escape.js",
        "origin": "AUTHORED"
    },
    "component/escape-reg-exp": {
        "files": [
            {
                "relativePath": "escapeRegExp.js",
                "test": false,
                "name": "escapeRegExp.js"
            }
        ],
        "mainFile": "escapeRegExp.js",
        "origin": "AUTHORED"
    },
    "component/every": {
        "files": [
            {
                "relativePath": "every.js",
                "test": false,
                "name": "every.js"
            }
        ],
        "mainFile": "every.js",
        "origin": "AUTHORED"
    },
    "component/every-value": {
        "files": [
            {
                "relativePath": "everyValue.js",
                "test": false,
                "name": "everyValue.js"
            }
        ],
        "mainFile": "everyValue.js",
        "origin": "AUTHORED"
    },
    "component/filter": {
        "files": [
            {
                "relativePath": "filter.js",
                "test": false,
                "name": "filter.js"
            }
        ],
        "mainFile": "filter.js",
        "origin": "AUTHORED"
    },
    "component/filter-object": {
        "files": [
            {
                "relativePath": "filterObject.js",
                "test": false,
                "name": "filterObject.js"
            }
        ],
        "mainFile": "filterObject.js",
        "origin": "AUTHORED"
    },
    "component/find-key": {
        "files": [
            {
                "relativePath": "findKey.js",
                "test": false,
                "name": "findKey.js"
            }
        ],
        "mainFile": "findKey.js",
        "origin": "AUTHORED"
    },
    "component/find-last-index": {
        "files": [
            {
                "relativePath": "findLastIndex.js",
                "test": false,
                "name": "findLastIndex.js"
            }
        ],
        "mainFile": "findLastIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index"
        ]
    },
    "component/find-last-key": {
        "files": [
            {
                "relativePath": "findLastKey.js",
                "test": false,
                "name": "findLastKey.js"
            }
        ],
        "mainFile": "findLastKey.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for-right",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own-right",
            "internal/base-find-key"
        ]
    },
    "component/first": {
        "files": [
            {
                "relativePath": "first.js",
                "test": false,
                "name": "first.js"
            }
        ],
        "mainFile": "first.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/head"
        ]
    },
    "component/flat-map": {
        "files": [
            {
                "relativePath": "flatMap.js",
                "test": false,
                "name": "flatMap.js"
            }
        ],
        "mainFile": "flatMap.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "component/map"
        ]
    },
    "component/flat-map-deep": {
        "files": [
            {
                "relativePath": "flatMapDeep.js",
                "test": false,
                "name": "flatMapDeep.js"
            }
        ],
        "mainFile": "flatMapDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "component/map"
        ]
    },
    "component/flat-map-depth": {
        "files": [
            {
                "relativePath": "flatMapDepth.js",
                "test": false,
                "name": "flatMapDepth.js"
            }
        ],
        "mainFile": "flatMapDepth.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "component/map"
        ]
    },
    "component/flatten": {
        "files": [
            {
                "relativePath": "flatten.js",
                "test": false,
                "name": "flatten.js"
            }
        ],
        "mainFile": "flatten.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten"
        ]
    },
    "component/flatten-deep": {
        "files": [
            {
                "relativePath": "flattenDeep.js",
                "test": false,
                "name": "flattenDeep.js"
            }
        ],
        "mainFile": "flattenDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten"
        ]
    },
    "component/flatten-depth": {
        "files": [
            {
                "relativePath": "flattenDepth.js",
                "test": false,
                "name": "flattenDepth.js"
            }
        ],
        "mainFile": "flattenDepth.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten"
        ]
    },
    "component/flip": {
        "files": [
            {
                "relativePath": "flip.js",
                "test": false,
                "name": "flip.js"
            }
        ],
        "mainFile": "flip.js",
        "origin": "AUTHORED"
    },
    "component/floor": {
        "files": [
            {
                "relativePath": "floor.js",
                "test": false,
                "name": "floor.js"
            }
        ],
        "mainFile": "floor.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/create-round"
        ]
    },
    "component/flow": {
        "files": [
            {
                "relativePath": "flow.js",
                "test": false,
                "name": "flow.js"
            }
        ],
        "mainFile": "flow.js",
        "origin": "AUTHORED"
    },
    "component/flow-right": {
        "files": [
            {
                "relativePath": "flowRight.js",
                "test": false,
                "name": "flowRight.js"
            }
        ],
        "mainFile": "flowRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/flow"
        ]
    },
    "component/for-each": {
        "files": [
            {
                "relativePath": "forEach.js",
                "test": false,
                "name": "forEach.js"
            }
        ],
        "mainFile": "forEach.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/array-each",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each"
        ]
    },
    "component/for-each-right": {
        "files": [
            {
                "relativePath": "forEachRight.js",
                "test": false,
                "name": "forEachRight.js"
            }
        ],
        "mainFile": "forEachRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/array-each-right",
            "internal/base-for-right",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own-right",
            "internal/base-each-right"
        ]
    },
    "component/for-own": {
        "files": [
            {
                "relativePath": "forOwn.js",
                "test": false,
                "name": "forOwn.js"
            }
        ],
        "mainFile": "forOwn.js",
        "origin": "AUTHORED"
    },
    "component/for-own-right": {
        "files": [
            {
                "relativePath": "forOwnRight.js",
                "test": false,
                "name": "forOwnRight.js"
            }
        ],
        "mainFile": "forOwnRight.js",
        "origin": "AUTHORED"
    },
    "component/from-pairs": {
        "files": [
            {
                "relativePath": "fromPairs.js",
                "test": false,
                "name": "fromPairs.js"
            }
        ],
        "mainFile": "fromPairs.js",
        "origin": "AUTHORED"
    },
    "component/functions": {
        "files": [
            {
                "relativePath": "functions.js",
                "test": false,
                "name": "functions.js"
            }
        ],
        "mainFile": "functions.js",
        "origin": "AUTHORED"
    },
    "component/get": {
        "files": [
            {
                "relativePath": "get.js",
                "test": false,
                "name": "get.js"
            }
        ],
        "mainFile": "get.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get"
        ]
    },
    "component/group-by": {
        "files": [
            {
                "relativePath": "groupBy.js",
                "test": false,
                "name": "groupBy.js"
            }
        ],
        "mainFile": "groupBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "internal/array-reduce",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "internal/base-reduce",
            "component/reduce"
        ]
    },
    "component/gt": {
        "files": [
            {
                "relativePath": "gt.js",
                "test": false,
                "name": "gt.js"
            }
        ],
        "mainFile": "gt.js",
        "origin": "AUTHORED"
    },
    "component/gte": {
        "files": [
            {
                "relativePath": "gte.js",
                "test": false,
                "name": "gte.js"
            }
        ],
        "mainFile": "gte.js",
        "origin": "AUTHORED"
    },
    "component/has": {
        "files": [
            {
                "relativePath": "has.js",
                "test": false,
                "name": "has.js"
            }
        ],
        "mainFile": "has.js",
        "origin": "AUTHORED"
    },
    "component/has-in": {
        "files": [
            {
                "relativePath": "hasIn.js",
                "test": false,
                "name": "hasIn.js"
            }
        ],
        "mainFile": "hasIn.js",
        "origin": "AUTHORED"
    },
    "component/has-path": {
        "files": [
            {
                "relativePath": "hasPath.js",
                "test": false,
                "name": "hasPath.js"
            }
        ],
        "mainFile": "hasPath.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-arguments",
            "component/is-length"
        ]
    },
    "component/has-path-in": {
        "files": [
            {
                "relativePath": "hasPathIn.js",
                "test": false,
                "name": "hasPathIn.js"
            }
        ],
        "mainFile": "hasPathIn.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-arguments",
            "component/is-length"
        ]
    },
    "component/head": {
        "files": [
            {
                "relativePath": "head.js",
                "test": false,
                "name": "head.js"
            }
        ],
        "mainFile": "head.js",
        "origin": "AUTHORED"
    },
    "component/index-of": {
        "files": [
            {
                "relativePath": "indexOf.js",
                "test": false,
                "name": "indexOf.js"
            }
        ],
        "mainFile": "indexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of"
        ]
    },
    "component/initial": {
        "files": [
            {
                "relativePath": "initial.js",
                "test": false,
                "name": "initial.js"
            }
        ],
        "mainFile": "initial.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/in-range": {
        "files": [
            {
                "relativePath": "inRange.js",
                "test": false,
                "name": "inRange.js"
            }
        ],
        "mainFile": "inRange.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-in-range"
        ]
    },
    "component/intersection": {
        "files": [
            {
                "relativePath": "intersection.js",
                "test": false,
                "name": "intersection.js"
            }
        ],
        "mainFile": "intersection.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "internal/base-intersection",
            "internal/cast-array-like-object"
        ]
    },
    "component/intersection-by": {
        "files": [
            {
                "relativePath": "intersectionBy.js",
                "test": false,
                "name": "intersectionBy.js"
            }
        ],
        "mainFile": "intersectionBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-intersection",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "internal/cast-array-like-object",
            "component/last"
        ]
    },
    "component/intersection-with": {
        "files": [
            {
                "relativePath": "intersectionWith.js",
                "test": false,
                "name": "intersectionWith.js"
            }
        ],
        "mainFile": "intersectionWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-intersection",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "internal/cast-array-like-object",
            "component/last"
        ]
    },
    "component/invert": {
        "files": [
            {
                "relativePath": "invert.js",
                "test": false,
                "name": "invert.js"
            }
        ],
        "mainFile": "invert.js",
        "origin": "AUTHORED"
    },
    "component/invert-by": {
        "files": [
            {
                "relativePath": "invertBy.js",
                "test": false,
                "name": "invertBy.js"
            }
        ],
        "mainFile": "invertBy.js",
        "origin": "AUTHORED"
    },
    "component/invoke": {
        "files": [
            {
                "relativePath": "invoke.js",
                "test": false,
                "name": "invoke.js"
            }
        ],
        "mainFile": "invoke.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "component/last",
            "internal/parent"
        ]
    },
    "component/invoke-map": {
        "files": [
            {
                "relativePath": "invokeMap.js",
                "test": false,
                "name": "invokeMap.js"
            }
        ],
        "mainFile": "invokeMap.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "component/invoke"
        ]
    },
    "component/is-arguments": {
        "files": [
            {
                "relativePath": "isArguments.js",
                "test": false,
                "name": "isArguments.js"
            }
        ],
        "mainFile": "isArguments.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag"
        ]
    },
    "component/is-array-buffer": {
        "files": [
            {
                "relativePath": "isArrayBuffer.js",
                "test": false,
                "name": "isArrayBuffer.js"
            }
        ],
        "mainFile": "isArrayBuffer.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like"
        ]
    },
    "component/is-array-like": {
        "files": [
            {
                "relativePath": "isArrayLike.js",
                "test": false,
                "name": "isArrayLike.js"
            }
        ],
        "mainFile": "isArrayLike.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-length"
        ]
    },
    "component/is-array-like-object": {
        "files": [
            {
                "relativePath": "isArrayLikeObject.js",
                "test": false,
                "name": "isArrayLikeObject.js"
            }
        ],
        "mainFile": "isArrayLikeObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like"
        ]
    },
    "component/is-boolean": {
        "files": [
            {
                "relativePath": "isBoolean.js",
                "test": false,
                "name": "isBoolean.js"
            }
        ],
        "mainFile": "isBoolean.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-object-like"
        ]
    },
    "component/is-buffer": {
        "files": [
            {
                "relativePath": "isBuffer.js",
                "test": false,
                "name": "isBuffer.js"
            }
        ],
        "mainFile": "isBuffer.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/free-global",
            "internal/root"
        ]
    },
    "component/is-date": {
        "files": [
            {
                "relativePath": "isDate.js",
                "test": false,
                "name": "isDate.js"
            }
        ],
        "mainFile": "isDate.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like"
        ]
    },
    "component/is-element": {
        "files": [
            {
                "relativePath": "isElement.js",
                "test": false,
                "name": "isElement.js"
            }
        ],
        "mainFile": "isElement.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object-like",
            "internal/base-get-tag",
            "component/is-plain-object"
        ]
    },
    "component/is-empty": {
        "files": [
            {
                "relativePath": "isEmpty.js",
                "test": false,
                "name": "isEmpty.js"
            }
        ],
        "mainFile": "isEmpty.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "component/is-length",
            "component/is-array-like",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/is-prototype"
        ]
    },
    "component/is-equal-with": {
        "files": [
            {
                "relativePath": "isEqualWith.js",
                "test": false,
                "name": "isEqualWith.js"
            }
        ],
        "mainFile": "isEqualWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal"
        ]
    },
    "component/is-error": {
        "files": [
            {
                "relativePath": "isError.js",
                "test": false,
                "name": "isError.js"
            }
        ],
        "mainFile": "isError.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-object-like",
            "component/is-plain-object"
        ]
    },
    "component/is-function": {
        "files": [
            {
                "relativePath": "isFunction.js",
                "test": false,
                "name": "isFunction.js"
            }
        ],
        "mainFile": "isFunction.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-object"
        ]
    },
    "component/is-length": {
        "files": [
            {
                "relativePath": "isLength.js",
                "test": false,
                "name": "isLength.js"
            }
        ],
        "mainFile": "isLength.js",
        "origin": "AUTHORED"
    },
    "component/is-map": {
        "files": [
            {
                "relativePath": "isMap.js",
                "test": false,
                "name": "isMap.js"
            }
        ],
        "mainFile": "isMap.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like"
        ]
    },
    "component/is-match": {
        "files": [
            {
                "relativePath": "isMatch.js",
                "test": false,
                "name": "isMatch.js"
            }
        ],
        "mainFile": "isMatch.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal",
            "component/is-object",
            "internal/is-strict-comparable",
            "internal/base-is-match",
            "internal/get-match-data"
        ]
    },
    "component/is-match-with": {
        "files": [
            {
                "relativePath": "isMatchWith.js",
                "test": false,
                "name": "isMatchWith.js"
            }
        ],
        "mainFile": "isMatchWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal",
            "internal/base-is-match",
            "component/is-object",
            "internal/is-strict-comparable",
            "internal/get-match-data"
        ]
    },
    "component/is-native": {
        "files": [
            {
                "relativePath": "isNative.js",
                "test": false,
                "name": "isNative.js"
            }
        ],
        "mainFile": "isNative.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object"
        ]
    },
    "component/is-nil": {
        "files": [
            {
                "relativePath": "isNil.js",
                "test": false,
                "name": "isNil.js"
            }
        ],
        "mainFile": "isNil.js",
        "origin": "AUTHORED"
    },
    "component/is-null": {
        "files": [
            {
                "relativePath": "isNull.js",
                "test": false,
                "name": "isNull.js"
            }
        ],
        "mainFile": "isNull.js",
        "origin": "AUTHORED"
    },
    "component/is-number": {
        "files": [
            {
                "relativePath": "isNumber.js",
                "test": false,
                "name": "isNumber.js"
            }
        ],
        "mainFile": "isNumber.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-object-like"
        ]
    },
    "component/is-object": {
        "files": [
            {
                "relativePath": "isObject.js",
                "test": false,
                "name": "isObject.js"
            }
        ],
        "mainFile": "isObject.js",
        "origin": "AUTHORED"
    },
    "component/is-object-like": {
        "files": [
            {
                "relativePath": "isObjectLike.js",
                "test": false,
                "name": "isObjectLike.js"
            }
        ],
        "mainFile": "isObjectLike.js",
        "origin": "AUTHORED"
    },
    "component/is-plain-object": {
        "files": [
            {
                "relativePath": "isPlainObject.js",
                "test": false,
                "name": "isPlainObject.js"
            }
        ],
        "mainFile": "isPlainObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "component/is-object-like"
        ]
    },
    "component/is-reg-exp": {
        "files": [
            {
                "relativePath": "isRegExp.js",
                "test": false,
                "name": "isRegExp.js"
            }
        ],
        "mainFile": "isRegExp.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like"
        ]
    },
    "component/is-set": {
        "files": [
            {
                "relativePath": "isSet.js",
                "test": false,
                "name": "isSet.js"
            }
        ],
        "mainFile": "isSet.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/free-global",
            "internal/node-util"
        ]
    },
    "component/is-string": {
        "files": [
            {
                "relativePath": "isString.js",
                "test": false,
                "name": "isString.js"
            }
        ],
        "mainFile": "isString.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag"
        ]
    },
    "component/is-symbol": {
        "files": [
            {
                "relativePath": "isSymbol.js",
                "test": false,
                "name": "isSymbol.js"
            }
        ],
        "mainFile": "isSymbol.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag"
        ]
    },
    "component/is-typed-array": {
        "files": [
            {
                "relativePath": "isTypedArray.js",
                "test": false,
                "name": "isTypedArray.js"
            }
        ],
        "mainFile": "isTypedArray.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/free-global",
            "internal/node-util"
        ]
    },
    "component/is-undefined": {
        "files": [
            {
                "relativePath": "isUndefined.js",
                "test": false,
                "name": "isUndefined.js"
            }
        ],
        "mainFile": "isUndefined.js",
        "origin": "AUTHORED"
    },
    "component/is-weak-map": {
        "files": [
            {
                "relativePath": "isWeakMap.js",
                "test": false,
                "name": "isWeakMap.js"
            }
        ],
        "mainFile": "isWeakMap.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag"
        ]
    },
    "component/is-weak-set": {
        "files": [
            {
                "relativePath": "isWeakSet.js",
                "test": false,
                "name": "isWeakSet.js"
            }
        ],
        "mainFile": "isWeakSet.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag"
        ]
    },
    "component/kebab-case": {
        "files": [
            {
                "relativePath": "kebabCase.js",
                "test": false,
                "name": "kebabCase.js"
            }
        ],
        "mainFile": "kebabCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/unicode-words",
            "component/words"
        ]
    },
    "component/key-by": {
        "files": [
            {
                "relativePath": "keyBy.js",
                "test": false,
                "name": "keyBy.js"
            }
        ],
        "mainFile": "keyBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "internal/array-reduce",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "internal/base-reduce",
            "component/reduce"
        ]
    },
    "component/keys": {
        "files": [
            {
                "relativePath": "keys.js",
                "test": false,
                "name": "keys.js"
            }
        ],
        "mainFile": "keys.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like"
        ]
    },
    "component/last": {
        "files": [
            {
                "relativePath": "last.js",
                "test": false,
                "name": "last.js"
            }
        ],
        "mainFile": "last.js",
        "origin": "AUTHORED"
    },
    "component/last-index-of": {
        "files": [
            {
                "relativePath": "lastIndexOf.js",
                "test": false,
                "name": "lastIndexOf.js"
            }
        ],
        "mainFile": "lastIndexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-last-index-of"
        ]
    },
    "component/lower-case": {
        "files": [
            {
                "relativePath": "lowerCase.js",
                "test": false,
                "name": "lowerCase.js"
            }
        ],
        "mainFile": "lowerCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/unicode-words",
            "component/words"
        ]
    },
    "component/lower-first": {
        "files": [
            {
                "relativePath": "lowerFirst.js",
                "test": false,
                "name": "lowerFirst.js"
            }
        ],
        "mainFile": "lowerFirst.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/create-case-first"
        ]
    },
    "component/lt": {
        "files": [
            {
                "relativePath": "lt.js",
                "test": false,
                "name": "lt.js"
            }
        ],
        "mainFile": "lt.js",
        "origin": "AUTHORED"
    },
    "component/lte": {
        "files": [
            {
                "relativePath": "lte.js",
                "test": false,
                "name": "lte.js"
            }
        ],
        "mainFile": "lte.js",
        "origin": "AUTHORED"
    },
    "component/map": {
        "files": [
            {
                "relativePath": "map.js",
                "test": false,
                "name": "map.js"
            }
        ],
        "mainFile": "map.js",
        "origin": "AUTHORED"
    },
    "component/map-key": {
        "files": [
            {
                "relativePath": "mapKey.js",
                "test": false,
                "name": "mapKey.js"
            }
        ],
        "mainFile": "mapKey.js",
        "origin": "AUTHORED"
    },
    "component/map-object": {
        "files": [
            {
                "relativePath": "mapObject.js",
                "test": false,
                "name": "mapObject.js"
            }
        ],
        "mainFile": "mapObject.js",
        "origin": "AUTHORED"
    },
    "component/map-value": {
        "files": [
            {
                "relativePath": "mapValue.js",
                "test": false,
                "name": "mapValue.js"
            }
        ],
        "mainFile": "mapValue.js",
        "origin": "AUTHORED"
    },
    "component/max-by": {
        "files": [
            {
                "relativePath": "maxBy.js",
                "test": false,
                "name": "maxBy.js"
            }
        ],
        "mainFile": "maxBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "component/mean": {
        "files": [
            {
                "relativePath": "mean.js",
                "test": false,
                "name": "mean.js"
            }
        ],
        "mainFile": "mean.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/mean-by",
            "internal/base-sum"
        ]
    },
    "component/mean-by": {
        "files": [
            {
                "relativePath": "meanBy.js",
                "test": false,
                "name": "meanBy.js"
            }
        ],
        "mainFile": "meanBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-sum"
        ]
    },
    "component/memoize": {
        "files": [
            {
                "relativePath": "memoize.js",
                "test": false,
                "name": "memoize.js"
            }
        ],
        "mainFile": "memoize.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache"
        ]
    },
    "component/method": {
        "files": [
            {
                "relativePath": "method.js",
                "test": false,
                "name": "method.js"
            }
        ],
        "mainFile": "method.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "component/invoke"
        ]
    },
    "component/method-of": {
        "files": [
            {
                "relativePath": "methodOf.js",
                "test": false,
                "name": "methodOf.js"
            }
        ],
        "mainFile": "methodOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "component/invoke"
        ]
    },
    "component/min-by": {
        "files": [
            {
                "relativePath": "minBy.js",
                "test": false,
                "name": "minBy.js"
            }
        ],
        "mainFile": "minBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "component/multiply": {
        "files": [
            {
                "relativePath": "multiply.js",
                "test": false,
                "name": "multiply.js"
            }
        ],
        "mainFile": "multiply.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-number",
            "internal/base-to-string",
            "internal/create-math-operation"
        ]
    },
    "component/negate": {
        "files": [
            {
                "relativePath": "negate.js",
                "test": false,
                "name": "negate.js"
            }
        ],
        "mainFile": "negate.js",
        "origin": "AUTHORED"
    },
    "component/nth": {
        "files": [
            {
                "relativePath": "nth.js",
                "test": false,
                "name": "nth.js"
            }
        ],
        "mainFile": "nth.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index"
        ]
    },
    "component/nth-arg": {
        "files": [
            {
                "relativePath": "nthArg.js",
                "test": false,
                "name": "nthArg.js"
            }
        ],
        "mainFile": "nthArg.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index",
            "component/nth"
        ]
    },
    "component/once": {
        "files": [
            {
                "relativePath": "once.js",
                "test": false,
                "name": "once.js"
            }
        ],
        "mainFile": "once.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/before"
        ]
    },
    "component/over": {
        "files": [
            {
                "relativePath": "over.js",
                "test": false,
                "name": "over.js"
            }
        ],
        "mainFile": "over.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/map"
        ]
    },
    "component/over-args": {
        "files": [
            {
                "relativePath": "overArgs.js",
                "test": false,
                "name": "overArgs.js"
            }
        ],
        "mainFile": "overArgs.js",
        "origin": "AUTHORED"
    },
    "component/over-every": {
        "files": [
            {
                "relativePath": "overEvery.js",
                "test": false,
                "name": "overEvery.js"
            }
        ],
        "mainFile": "overEvery.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/every"
        ]
    },
    "component/over-some": {
        "files": [
            {
                "relativePath": "overSome.js",
                "test": false,
                "name": "overSome.js"
            }
        ],
        "mainFile": "overSome.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/some"
        ]
    },
    "component/pad": {
        "files": [
            {
                "relativePath": "pad.js",
                "test": false,
                "name": "pad.js"
            }
        ],
        "mainFile": "pad.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-string",
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/ascii-size",
            "internal/unicode-size",
            "internal/string-size",
            "component/repeat",
            "internal/create-padding"
        ]
    },
    "component/pad-end": {
        "files": [
            {
                "relativePath": "padEnd.js",
                "test": false,
                "name": "padEnd.js"
            }
        ],
        "mainFile": "padEnd.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-string",
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-size",
            "internal/unicode-size",
            "internal/string-size",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "component/repeat",
            "internal/create-padding"
        ]
    },
    "component/pad-start": {
        "files": [
            {
                "relativePath": "padStart.js",
                "test": false,
                "name": "padStart.js"
            }
        ],
        "mainFile": "padStart.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-string",
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-size",
            "internal/unicode-size",
            "internal/string-size",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "component/repeat",
            "internal/create-padding"
        ]
    },
    "component/parse-int": {
        "files": [
            {
                "relativePath": "parseInt.js",
                "test": false,
                "name": "parseInt.js"
            }
        ],
        "mainFile": "parseInt.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/free-global",
            "internal/root"
        ]
    },
    "component/partition": {
        "files": [
            {
                "relativePath": "partition.js",
                "test": false,
                "name": "partition.js"
            }
        ],
        "mainFile": "partition.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/array-reduce",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "internal/base-reduce",
            "component/reduce"
        ]
    },
    "component/pick": {
        "files": [
            {
                "relativePath": "pick.js",
                "test": false,
                "name": "pick.js"
            }
        ],
        "mainFile": "pick.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/is-index",
            "component/is-object",
            "component/has-in",
            "internal/assign-value",
            "internal/base-pick-by",
            "internal/base-pick",
            "internal/base-set"
        ]
    },
    "component/pick-by": {
        "files": [
            {
                "relativePath": "pickBy.js",
                "test": false,
                "name": "pickBy.js"
            }
        ],
        "mainFile": "pickBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set",
            "internal/base-pick-by",
            "component/filter",
            "internal/get-symbols",
            "component/map",
            "internal/get-all-keys-in",
            "internal/get-symbols-in"
        ]
    },
    "component/property": {
        "files": [
            {
                "relativePath": "property.js",
                "test": false,
                "name": "property.js"
            }
        ],
        "mainFile": "property.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-property-deep",
            "internal/base-property"
        ]
    },
    "component/property-of": {
        "files": [
            {
                "relativePath": "propertyOf.js",
                "test": false,
                "name": "propertyOf.js"
            }
        ],
        "mainFile": "propertyOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get"
        ]
    },
    "component/pull": {
        "files": [
            {
                "relativePath": "pull.js",
                "test": false,
                "name": "pull.js"
            }
        ],
        "mainFile": "pull.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "component/map",
            "component/pull-all",
            "internal/base-index-of-with",
            "internal/copy-array",
            "internal/base-pull-all"
        ]
    },
    "component/pull-all": {
        "files": [
            {
                "relativePath": "pullAll.js",
                "test": false,
                "name": "pullAll.js"
            }
        ],
        "mainFile": "pullAll.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/base-index-of-with",
            "internal/copy-array",
            "component/map",
            "internal/base-pull-all"
        ]
    },
    "component/pull-all-by": {
        "files": [
            {
                "relativePath": "pullAllBy.js",
                "test": false,
                "name": "pullAllBy.js"
            }
        ],
        "mainFile": "pullAllBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/base-index-of-with",
            "internal/copy-array",
            "component/map",
            "internal/base-pull-all"
        ]
    },
    "component/pull-all-with": {
        "files": [
            {
                "relativePath": "pullAllWith.js",
                "test": false,
                "name": "pullAllWith.js"
            }
        ],
        "mainFile": "pullAllWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/base-index-of-with",
            "internal/copy-array",
            "component/map",
            "internal/base-pull-all"
        ]
    },
    "component/pull-at": {
        "files": [
            {
                "relativePath": "pullAt.js",
                "test": false,
                "name": "pullAt.js"
            }
        ],
        "mainFile": "pullAt.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/get",
            "internal/base-at",
            "component/slice",
            "internal/parent",
            "component/last",
            "internal/is-index",
            "component/map",
            "internal/base-unset",
            "internal/base-pull-at",
            "internal/compare-ascending"
        ]
    },
    "component/random": {
        "files": [
            {
                "relativePath": "random.js",
                "test": false,
                "name": "random.js"
            }
        ],
        "mainFile": "random.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite"
        ]
    },
    "component/range": {
        "files": [
            {
                "relativePath": "range.js",
                "test": false,
                "name": "range.js"
            }
        ],
        "mainFile": "range.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite",
            "internal/base-range",
            "internal/create-range"
        ]
    },
    "component/range-right": {
        "files": [
            {
                "relativePath": "rangeRight.js",
                "test": false,
                "name": "rangeRight.js"
            }
        ],
        "mainFile": "rangeRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-range",
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite",
            "internal/create-range"
        ]
    },
    "component/reduce": {
        "files": [
            {
                "relativePath": "reduce.js",
                "test": false,
                "name": "reduce.js"
            }
        ],
        "mainFile": "reduce.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/array-reduce",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "internal/base-each",
            "internal/base-reduce"
        ]
    },
    "component/reduce-right": {
        "files": [
            {
                "relativePath": "reduceRight.js",
                "test": false,
                "name": "reduceRight.js"
            }
        ],
        "mainFile": "reduceRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for-right",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own-right",
            "internal/base-each-right",
            "internal/base-reduce",
            "internal/array-reduce-right"
        ]
    },
    "component/reject": {
        "files": [
            {
                "relativePath": "reject.js",
                "test": false,
                "name": "reject.js"
            }
        ],
        "mainFile": "reject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter",
            "component/filter-object",
            "component/negate"
        ]
    },
    "component/remove": {
        "files": [
            {
                "relativePath": "remove.js",
                "test": false,
                "name": "remove.js"
            }
        ],
        "mainFile": "remove.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "internal/base-unset",
            "internal/is-index",
            "internal/base-pull-at"
        ]
    },
    "component/repeat": {
        "files": [
            {
                "relativePath": "repeat.js",
                "test": false,
                "name": "repeat.js"
            }
        ],
        "mainFile": "repeat.js",
        "origin": "AUTHORED"
    },
    "component/replace": {
        "files": [
            {
                "relativePath": "replace.js",
                "test": false,
                "name": "replace.js"
            }
        ],
        "mainFile": "replace.js",
        "origin": "AUTHORED"
    },
    "component/result": {
        "files": [
            {
                "relativePath": "result.js",
                "test": false,
                "name": "result.js"
            }
        ],
        "mainFile": "result.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key"
        ]
    },
    "component/round": {
        "files": [
            {
                "relativePath": "round.js",
                "test": false,
                "name": "round.js"
            }
        ],
        "mainFile": "round.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/create-round"
        ]
    },
    "component/sample": {
        "files": [
            {
                "relativePath": "sample.js",
                "test": false,
                "name": "sample.js"
            }
        ],
        "mainFile": "sample.js",
        "origin": "AUTHORED"
    },
    "component/sample-size": {
        "files": [
            {
                "relativePath": "sampleSize.js",
                "test": false,
                "name": "sampleSize.js"
            }
        ],
        "mainFile": "sampleSize.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/copy-array"
        ]
    },
    "component/set": {
        "files": [
            {
                "relativePath": "set.js",
                "test": false,
                "name": "set.js"
            }
        ],
        "mainFile": "set.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-object",
            "internal/base-set"
        ]
    },
    "component/set-with": {
        "files": [
            {
                "relativePath": "setWith.js",
                "test": false,
                "name": "setWith.js"
            }
        ],
        "mainFile": "setWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-object",
            "internal/base-set"
        ]
    },
    "component/shuffle": {
        "files": [
            {
                "relativePath": "shuffle.js",
                "test": false,
                "name": "shuffle.js"
            }
        ],
        "mainFile": "shuffle.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/copy-array"
        ]
    },
    "component/size": {
        "files": [
            {
                "relativePath": "size.js",
                "test": false,
                "name": "size.js"
            }
        ],
        "mainFile": "size.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/ascii-size",
            "internal/has-unicode",
            "internal/unicode-size",
            "internal/string-size",
            "component/is-length",
            "component/is-array-like",
            "component/is-string"
        ]
    },
    "component/snake-case": {
        "files": [
            {
                "relativePath": "snakeCase.js",
                "test": false,
                "name": "snakeCase.js"
            }
        ],
        "mainFile": "snakeCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/unicode-words",
            "component/words"
        ]
    },
    "component/some": {
        "files": [
            {
                "relativePath": "some.js",
                "test": false,
                "name": "some.js"
            }
        ],
        "mainFile": "some.js",
        "origin": "AUTHORED"
    },
    "component/some-value": {
        "files": [
            {
                "relativePath": "someValue.js",
                "test": false,
                "name": "someValue.js"
            }
        ],
        "mainFile": "someValue.js",
        "origin": "AUTHORED"
    },
    "component/sorted-index": {
        "files": [
            {
                "relativePath": "sortedIndex.js",
                "test": false,
                "name": "sortedIndex.js"
            }
        ],
        "mainFile": "sortedIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index",
            "internal/base-sorted-index-by"
        ]
    },
    "component/sorted-index-by": {
        "files": [
            {
                "relativePath": "sortedIndexBy.js",
                "test": false,
                "name": "sortedIndexBy.js"
            }
        ],
        "mainFile": "sortedIndexBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by"
        ]
    },
    "component/sorted-index-of": {
        "files": [
            {
                "relativePath": "sortedIndexOf.js",
                "test": false,
                "name": "sortedIndexOf.js"
            }
        ],
        "mainFile": "sortedIndexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by",
            "internal/base-sorted-index",
            "component/eq"
        ]
    },
    "component/sorted-last-index": {
        "files": [
            {
                "relativePath": "sortedLastIndex.js",
                "test": false,
                "name": "sortedLastIndex.js"
            }
        ],
        "mainFile": "sortedLastIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by",
            "internal/base-sorted-index"
        ]
    },
    "component/sorted-last-index-by": {
        "files": [
            {
                "relativePath": "sortedLastIndexBy.js",
                "test": false,
                "name": "sortedLastIndexBy.js"
            }
        ],
        "mainFile": "sortedLastIndexBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by"
        ]
    },
    "component/sorted-last-index-of": {
        "files": [
            {
                "relativePath": "sortedLastIndexOf.js",
                "test": false,
                "name": "sortedLastIndexOf.js"
            }
        ],
        "mainFile": "sortedLastIndexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by",
            "internal/base-sorted-index",
            "component/eq"
        ]
    },
    "component/sorted-uniq": {
        "files": [
            {
                "relativePath": "sortedUniq.js",
                "test": false,
                "name": "sortedUniq.js"
            }
        ],
        "mainFile": "sortedUniq.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/base-sorted-uniq"
        ]
    },
    "component/sorted-uniq-by": {
        "files": [
            {
                "relativePath": "sortedUniqBy.js",
                "test": false,
                "name": "sortedUniqBy.js"
            }
        ],
        "mainFile": "sortedUniqBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/base-sorted-uniq"
        ]
    },
    "component/split": {
        "files": [
            {
                "relativePath": "split.js",
                "test": false,
                "name": "split.js"
            }
        ],
        "mainFile": "split.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/base-get-tag",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like",
            "component/is-reg-exp"
        ]
    },
    "component/start-case": {
        "files": [
            {
                "relativePath": "startCase.js",
                "test": false,
                "name": "startCase.js"
            }
        ],
        "mainFile": "startCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/create-case-first",
            "component/upper-first",
            "internal/unicode-words",
            "component/words"
        ]
    },
    "component/starts-with": {
        "files": [
            {
                "relativePath": "startsWith.js",
                "test": false,
                "name": "startsWith.js"
            }
        ],
        "mainFile": "startsWith.js",
        "origin": "AUTHORED"
    },
    "component/subtract": {
        "files": [
            {
                "relativePath": "subtract.js",
                "test": false,
                "name": "subtract.js"
            }
        ],
        "mainFile": "subtract.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-number",
            "internal/base-to-string",
            "internal/create-math-operation"
        ]
    },
    "component/sum": {
        "files": [
            {
                "relativePath": "sum.js",
                "test": false,
                "name": "sum.js"
            }
        ],
        "mainFile": "sum.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-sum"
        ]
    },
    "component/sum-by": {
        "files": [
            {
                "relativePath": "sumBy.js",
                "test": false,
                "name": "sumBy.js"
            }
        ],
        "mainFile": "sumBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-sum"
        ]
    },
    "component/tail": {
        "files": [
            {
                "relativePath": "tail.js",
                "test": false,
                "name": "tail.js"
            }
        ],
        "mainFile": "tail.js",
        "origin": "AUTHORED"
    },
    "component/take": {
        "files": [
            {
                "relativePath": "take.js",
                "test": false,
                "name": "take.js"
            }
        ],
        "mainFile": "take.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/take-right": {
        "files": [
            {
                "relativePath": "takeRight.js",
                "test": false,
                "name": "takeRight.js"
            }
        ],
        "mainFile": "takeRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "component/take-right-while": {
        "files": [
            {
                "relativePath": "takeRightWhile.js",
                "test": false,
                "name": "takeRightWhile.js"
            }
        ],
        "mainFile": "takeRightWhile.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/base-while"
        ]
    },
    "component/take-while": {
        "files": [
            {
                "relativePath": "takeWhile.js",
                "test": false,
                "name": "takeWhile.js"
            }
        ],
        "mainFile": "takeWhile.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/base-while"
        ]
    },
    "component/template-settings": {
        "files": [
            {
                "relativePath": "templateSettings.js",
                "test": false,
                "name": "templateSettings.js"
            }
        ],
        "mainFile": "templateSettings.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/escape",
            "internal/re-escape",
            "internal/re-evaluate",
            "internal/re-interpolate"
        ]
    },
    "component/throttle": {
        "files": [
            {
                "relativePath": "throttle.js",
                "test": false,
                "name": "throttle.js"
            }
        ],
        "mainFile": "throttle.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "component/debounce"
        ]
    },
    "component/times": {
        "files": [
            {
                "relativePath": "times.js",
                "test": false,
                "name": "times.js"
            }
        ],
        "mainFile": "times.js",
        "origin": "AUTHORED"
    },
    "component/to-array": {
        "files": [
            {
                "relativePath": "toArray.js",
                "test": false,
                "name": "toArray.js"
            }
        ],
        "mainFile": "toArray.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/copy-array",
            "internal/base-get-tag",
            "internal/get-tag",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/ascii-to-array",
            "internal/has-unicode",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "component/is-length",
            "component/is-array-like",
            "component/is-string",
            "internal/is-index",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/keys",
            "component/values",
            "internal/base-values",
            "internal/iterator-to-array"
        ]
    },
    "component/to-finite": {
        "files": [
            {
                "relativePath": "toFinite.js",
                "test": false,
                "name": "toFinite.js"
            }
        ],
        "mainFile": "toFinite.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number"
        ]
    },
    "component/to-integer": {
        "files": [
            {
                "relativePath": "toInteger.js",
                "test": false,
                "name": "toInteger.js"
            }
        ],
        "mainFile": "toInteger.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite"
        ]
    },
    "component/to-length": {
        "files": [
            {
                "relativePath": "toLength.js",
                "test": false,
                "name": "toLength.js"
            }
        ],
        "mainFile": "toLength.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite",
            "component/to-integer"
        ]
    },
    "component/to-number": {
        "files": [
            {
                "relativePath": "toNumber.js",
                "test": false,
                "name": "toNumber.js"
            }
        ],
        "mainFile": "toNumber.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "component/to-path": {
        "files": [
            {
                "relativePath": "toPath.js",
                "test": false,
                "name": "toPath.js"
            }
        ],
        "mainFile": "toPath.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/copy-array",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/to-key",
            "component/map"
        ]
    },
    "component/to-plain-object": {
        "files": [
            {
                "relativePath": "toPlainObject.js",
                "test": false,
                "name": "toPlainObject.js"
            }
        ],
        "mainFile": "toPlainObject.js",
        "origin": "AUTHORED"
    },
    "component/to-safe-integer": {
        "files": [
            {
                "relativePath": "toSafeInteger.js",
                "test": false,
                "name": "toSafeInteger.js"
            }
        ],
        "mainFile": "toSafeInteger.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite",
            "component/to-integer"
        ]
    },
    "component/to-string": {
        "files": [
            {
                "relativePath": "toString.js",
                "test": false,
                "name": "toString.js"
            }
        ],
        "mainFile": "toString.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/map"
        ]
    },
    "component/transform": {
        "files": [
            {
                "relativePath": "transform.js",
                "test": false,
                "name": "transform.js"
            }
        ],
        "mainFile": "transform.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/array-each",
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own",
            "component/is-object"
        ]
    },
    "component/trim": {
        "files": [
            {
                "relativePath": "trim.js",
                "test": false,
                "name": "trim.js"
            }
        ],
        "mainFile": "trim.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/ascii-to-array",
            "internal/has-unicode",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/chars-end-index",
            "internal/chars-start-index"
        ]
    },
    "component/trim-end": {
        "files": [
            {
                "relativePath": "trimEnd.js",
                "test": false,
                "name": "trimEnd.js"
            }
        ],
        "mainFile": "trimEnd.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/chars-end-index",
            "internal/ascii-to-array",
            "internal/has-unicode",
            "internal/unicode-to-array",
            "internal/string-to-array"
        ]
    },
    "component/trim-start": {
        "files": [
            {
                "relativePath": "trimStart.js",
                "test": false,
                "name": "trimStart.js"
            }
        ],
        "mainFile": "trimStart.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/chars-start-index",
            "internal/ascii-to-array",
            "internal/has-unicode",
            "internal/unicode-to-array",
            "internal/string-to-array"
        ]
    },
    "component/truncate": {
        "files": [
            {
                "relativePath": "truncate.js",
                "test": false,
                "name": "truncate.js"
            }
        ],
        "mainFile": "truncate.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-string",
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-size",
            "internal/unicode-size",
            "internal/string-size",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "component/is-object",
            "internal/free-global",
            "internal/node-util",
            "component/is-object-like",
            "component/is-reg-exp"
        ]
    },
    "component/unescape": {
        "files": [
            {
                "relativePath": "unescape.js",
                "test": false,
                "name": "unescape.js"
            }
        ],
        "mainFile": "unescape.js",
        "origin": "AUTHORED"
    },
    "component/union": {
        "files": [
            {
                "relativePath": "union.js",
                "test": false,
                "name": "union.js"
            }
        ],
        "mainFile": "union.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "internal/base-uniq",
            "internal/create-set"
        ]
    },
    "component/union-by": {
        "files": [
            {
                "relativePath": "unionBy.js",
                "test": false,
                "name": "unionBy.js"
            }
        ],
        "mainFile": "unionBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/union-with": {
        "files": [
            {
                "relativePath": "unionWith.js",
                "test": false,
                "name": "unionWith.js"
            }
        ],
        "mainFile": "unionWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/uniq": {
        "files": [
            {
                "relativePath": "uniq.js",
                "test": false,
                "name": "uniq.js"
            }
        ],
        "mainFile": "uniq.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq"
        ]
    },
    "component/uniq-by": {
        "files": [
            {
                "relativePath": "uniqBy.js",
                "test": false,
                "name": "uniqBy.js"
            }
        ],
        "mainFile": "uniqBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq"
        ]
    },
    "component/unique-id": {
        "files": [
            {
                "relativePath": "uniqueId.js",
                "test": false,
                "name": "uniqueId.js"
            }
        ],
        "mainFile": "uniqueId.js",
        "origin": "AUTHORED"
    },
    "component/uniq-with": {
        "files": [
            {
                "relativePath": "uniqWith.js",
                "test": false,
                "name": "uniqWith.js"
            }
        ],
        "mainFile": "uniqWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq"
        ]
    },
    "component/unset": {
        "files": [
            {
                "relativePath": "unset.js",
                "test": false,
                "name": "unset.js"
            }
        ],
        "mainFile": "unset.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "internal/base-unset"
        ]
    },
    "component/unzip": {
        "files": [
            {
                "relativePath": "unzip.js",
                "test": false,
                "name": "unzip.js"
            }
        ],
        "mainFile": "unzip.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-property",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/map"
        ]
    },
    "component/unzip-with": {
        "files": [
            {
                "relativePath": "unzipWith.js",
                "test": false,
                "name": "unzipWith.js"
            }
        ],
        "mainFile": "unzipWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/map",
            "internal/base-property",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/unzip"
        ]
    },
    "component/update": {
        "files": [
            {
                "relativePath": "update.js",
                "test": false,
                "name": "update.js"
            }
        ],
        "mainFile": "update.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set",
            "internal/base-update"
        ]
    },
    "component/update-with": {
        "files": [
            {
                "relativePath": "updateWith.js",
                "test": false,
                "name": "updateWith.js"
            }
        ],
        "mainFile": "updateWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set",
            "internal/base-update"
        ]
    },
    "component/upper-case": {
        "files": [
            {
                "relativePath": "upperCase.js",
                "test": false,
                "name": "upperCase.js"
            }
        ],
        "mainFile": "upperCase.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/unicode-words",
            "component/words"
        ]
    },
    "component/upper-first": {
        "files": [
            {
                "relativePath": "upperFirst.js",
                "test": false,
                "name": "upperFirst.js"
            }
        ],
        "mainFile": "upperFirst.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "internal/create-case-first"
        ]
    },
    "component/values": {
        "files": [
            {
                "relativePath": "values.js",
                "test": false,
                "name": "values.js"
            }
        ],
        "mainFile": "values.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-values",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "component/without": {
        "files": [
            {
                "relativePath": "without.js",
                "test": false,
                "name": "without.js"
            }
        ],
        "mainFile": "without.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object"
        ]
    },
    "component/words": {
        "files": [
            {
                "relativePath": "words.js",
                "test": false,
                "name": "words.js"
            }
        ],
        "mainFile": "words.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/unicode-words"
        ]
    },
    "component/xor": {
        "files": [
            {
                "relativePath": "xor.js",
                "test": false,
                "name": "xor.js"
            }
        ],
        "mainFile": "xor.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "internal/base-xor"
        ]
    },
    "component/xor-by": {
        "files": [
            {
                "relativePath": "xorBy.js",
                "test": false,
                "name": "xorBy.js"
            }
        ],
        "mainFile": "xorBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq",
            "internal/base-xor",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/xor-with": {
        "files": [
            {
                "relativePath": "xorWith.js",
                "test": false,
                "name": "xorWith.js"
            }
        ],
        "mainFile": "xorWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq",
            "internal/base-xor",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/last"
        ]
    },
    "component/zip": {
        "files": [
            {
                "relativePath": "zip.js",
                "test": false,
                "name": "zip.js"
            }
        ],
        "mainFile": "zip.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-property",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/map",
            "component/unzip"
        ]
    },
    "component/zip-object": {
        "files": [
            {
                "relativePath": "zipObject.js",
                "test": false,
                "name": "zipObject.js"
            }
        ],
        "mainFile": "zipObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/base-zip-object"
        ]
    },
    "component/zip-object-deep": {
        "files": [
            {
                "relativePath": "zipObjectDeep.js",
                "test": false,
                "name": "zipObjectDeep.js"
            }
        ],
        "mainFile": "zipObjectDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-object",
            "internal/base-set",
            "internal/base-zip-object"
        ]
    },
    "component/zip-with": {
        "files": [
            {
                "relativePath": "zipWith.js",
                "test": false,
                "name": "zipWith.js"
            }
        ],
        "mainFile": "zipWith.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/map",
            "internal/base-property",
            "component/filter",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/unzip",
            "component/unzip-with"
        ]
    },
    "internal/hash": {
        "files": [
            {
                "relativePath": ".internal/Hash.js",
                "test": false,
                "name": "Hash.js"
            }
        ],
        "mainFile": ".internal/Hash.js",
        "origin": "AUTHORED"
    },
    "internal/list-cache": {
        "files": [
            {
                "relativePath": ".internal/ListCache.js",
                "test": false,
                "name": "ListCache.js"
            }
        ],
        "mainFile": ".internal/ListCache.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of"
        ]
    },
    "internal/map-cache": {
        "files": [
            {
                "relativePath": ".internal/MapCache.js",
                "test": false,
                "name": "MapCache.js"
            }
        ],
        "mainFile": ".internal/MapCache.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache"
        ]
    },
    "internal/set-cache": {
        "files": [
            {
                "relativePath": ".internal/SetCache.js",
                "test": false,
                "name": "SetCache.js"
            }
        ],
        "mainFile": ".internal/SetCache.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache"
        ]
    },
    "internal/stack": {
        "files": [
            {
                "relativePath": ".internal/Stack.js",
                "test": false,
                "name": "Stack.js"
            }
        ],
        "mainFile": ".internal/Stack.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache"
        ]
    },
    "internal/add-map-entry": {
        "files": [
            {
                "relativePath": ".internal/addMapEntry.js",
                "test": false,
                "name": "addMapEntry.js"
            }
        ],
        "mainFile": ".internal/addMapEntry.js",
        "origin": "AUTHORED"
    },
    "internal/add-set-entry": {
        "files": [
            {
                "relativePath": ".internal/addSetEntry.js",
                "test": false,
                "name": "addSetEntry.js"
            }
        ],
        "mainFile": ".internal/addSetEntry.js",
        "origin": "AUTHORED"
    },
    "internal/array-each": {
        "files": [
            {
                "relativePath": ".internal/arrayEach.js",
                "test": false,
                "name": "arrayEach.js"
            }
        ],
        "mainFile": ".internal/arrayEach.js",
        "origin": "AUTHORED"
    },
    "internal/array-each-right": {
        "files": [
            {
                "relativePath": ".internal/arrayEachRight.js",
                "test": false,
                "name": "arrayEachRight.js"
            }
        ],
        "mainFile": ".internal/arrayEachRight.js",
        "origin": "AUTHORED"
    },
    "internal/array-includes": {
        "files": [
            {
                "relativePath": ".internal/arrayIncludes.js",
                "test": false,
                "name": "arrayIncludes.js"
            }
        ],
        "mainFile": ".internal/arrayIncludes.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of"
        ]
    },
    "internal/array-includes-with": {
        "files": [
            {
                "relativePath": ".internal/arrayIncludesWith.js",
                "test": false,
                "name": "arrayIncludesWith.js"
            }
        ],
        "mainFile": ".internal/arrayIncludesWith.js",
        "origin": "AUTHORED"
    },
    "internal/array-like-keys": {
        "files": [
            {
                "relativePath": ".internal/arrayLikeKeys.js",
                "test": false,
                "name": "arrayLikeKeys.js"
            }
        ],
        "mainFile": ".internal/arrayLikeKeys.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array"
        ]
    },
    "internal/array-reduce": {
        "files": [
            {
                "relativePath": ".internal/arrayReduce.js",
                "test": false,
                "name": "arrayReduce.js"
            }
        ],
        "mainFile": ".internal/arrayReduce.js",
        "origin": "AUTHORED"
    },
    "internal/array-reduce-right": {
        "files": [
            {
                "relativePath": ".internal/arrayReduceRight.js",
                "test": false,
                "name": "arrayReduceRight.js"
            }
        ],
        "mainFile": ".internal/arrayReduceRight.js",
        "origin": "AUTHORED"
    },
    "internal/ascii-size": {
        "files": [
            {
                "relativePath": ".internal/asciiSize.js",
                "test": false,
                "name": "asciiSize.js"
            }
        ],
        "mainFile": ".internal/asciiSize.js",
        "origin": "AUTHORED"
    },
    "internal/ascii-to-array": {
        "files": [
            {
                "relativePath": ".internal/asciiToArray.js",
                "test": false,
                "name": "asciiToArray.js"
            }
        ],
        "mainFile": ".internal/asciiToArray.js",
        "origin": "AUTHORED"
    },
    "internal/assign-merge-value": {
        "files": [
            {
                "relativePath": ".internal/assignMergeValue.js",
                "test": false,
                "name": "assignMergeValue.js"
            }
        ],
        "mainFile": ".internal/assignMergeValue.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq"
        ]
    },
    "internal/assign-value": {
        "files": [
            {
                "relativePath": ".internal/assignValue.js",
                "test": false,
                "name": "assignValue.js"
            }
        ],
        "mainFile": ".internal/assignValue.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq"
        ]
    },
    "internal/assoc-index-of": {
        "files": [
            {
                "relativePath": ".internal/assocIndexOf.js",
                "test": false,
                "name": "assocIndexOf.js"
            }
        ],
        "mainFile": ".internal/assocIndexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq"
        ]
    },
    "internal/base-assign-value": {
        "files": [
            {
                "relativePath": ".internal/baseAssignValue.js",
                "test": false,
                "name": "baseAssignValue.js"
            }
        ],
        "mainFile": ".internal/baseAssignValue.js",
        "origin": "AUTHORED"
    },
    "internal/base-at": {
        "files": [
            {
                "relativePath": ".internal/baseAt.js",
                "test": false,
                "name": "baseAt.js"
            }
        ],
        "mainFile": ".internal/baseAt.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/get"
        ]
    },
    "internal/base-conforms": {
        "files": [
            {
                "relativePath": ".internal/baseConforms.js",
                "test": false,
                "name": "baseConforms.js"
            }
        ],
        "mainFile": ".internal/baseConforms.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-conforms-to",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "internal/base-conforms-to": {
        "files": [
            {
                "relativePath": ".internal/baseConformsTo.js",
                "test": false,
                "name": "baseConformsTo.js"
            }
        ],
        "mainFile": ".internal/baseConformsTo.js",
        "origin": "AUTHORED"
    },
    "internal/base-difference": {
        "files": [
            {
                "relativePath": ".internal/baseDifference.js",
                "test": false,
                "name": "baseDifference.js"
            }
        ],
        "mainFile": ".internal/baseDifference.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map"
        ]
    },
    "internal/base-each": {
        "files": [
            {
                "relativePath": ".internal/baseEach.js",
                "test": false,
                "name": "baseEach.js"
            }
        ],
        "mainFile": ".internal/baseEach.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own"
        ]
    },
    "internal/base-each-right": {
        "files": [
            {
                "relativePath": ".internal/baseEachRight.js",
                "test": false,
                "name": "baseEachRight.js"
            }
        ],
        "mainFile": ".internal/baseEachRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for-right",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/base-for-own-right"
        ]
    },
    "internal/base-find-index": {
        "files": [
            {
                "relativePath": ".internal/baseFindIndex.js",
                "test": false,
                "name": "baseFindIndex.js"
            }
        ],
        "mainFile": ".internal/baseFindIndex.js",
        "origin": "AUTHORED"
    },
    "internal/base-find-key": {
        "files": [
            {
                "relativePath": ".internal/baseFindKey.js",
                "test": false,
                "name": "baseFindKey.js"
            }
        ],
        "mainFile": ".internal/baseFindKey.js",
        "origin": "AUTHORED"
    },
    "internal/base-flatten": {
        "files": [
            {
                "relativePath": ".internal/baseFlatten.js",
                "test": false,
                "name": "baseFlatten.js"
            }
        ],
        "mainFile": ".internal/baseFlatten.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable"
        ]
    },
    "internal/base-for": {
        "files": [
            {
                "relativePath": ".internal/baseFor.js",
                "test": false,
                "name": "baseFor.js"
            }
        ],
        "mainFile": ".internal/baseFor.js",
        "origin": "AUTHORED"
    },
    "internal/base-for-own": {
        "files": [
            {
                "relativePath": ".internal/baseForOwn.js",
                "test": false,
                "name": "baseForOwn.js"
            }
        ],
        "mainFile": ".internal/baseForOwn.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "internal/base-for-own-right": {
        "files": [
            {
                "relativePath": ".internal/baseForOwnRight.js",
                "test": false,
                "name": "baseForOwnRight.js"
            }
        ],
        "mainFile": ".internal/baseForOwnRight.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-for-right",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "internal/base-for-right": {
        "files": [
            {
                "relativePath": ".internal/baseForRight.js",
                "test": false,
                "name": "baseForRight.js"
            }
        ],
        "mainFile": ".internal/baseForRight.js",
        "origin": "AUTHORED"
    },
    "internal/base-get": {
        "files": [
            {
                "relativePath": ".internal/baseGet.js",
                "test": false,
                "name": "baseGet.js"
            }
        ],
        "mainFile": ".internal/baseGet.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key"
        ]
    },
    "internal/base-get-tag": {
        "files": [
            {
                "relativePath": ".internal/baseGetTag.js",
                "test": false,
                "name": "baseGetTag.js"
            }
        ],
        "mainFile": ".internal/baseGetTag.js",
        "origin": "AUTHORED"
    },
    "internal/base-in-range": {
        "files": [
            {
                "relativePath": ".internal/baseInRange.js",
                "test": false,
                "name": "baseInRange.js"
            }
        ],
        "mainFile": ".internal/baseInRange.js",
        "origin": "AUTHORED"
    },
    "internal/base-index-of": {
        "files": [
            {
                "relativePath": ".internal/baseIndexOf.js",
                "test": false,
                "name": "baseIndexOf.js"
            }
        ],
        "mainFile": ".internal/baseIndexOf.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of"
        ]
    },
    "internal/base-index-of-with": {
        "files": [
            {
                "relativePath": ".internal/baseIndexOfWith.js",
                "test": false,
                "name": "baseIndexOfWith.js"
            }
        ],
        "mainFile": ".internal/baseIndexOfWith.js",
        "origin": "AUTHORED"
    },
    "internal/base-intersection": {
        "files": [
            {
                "relativePath": ".internal/baseIntersection.js",
                "test": false,
                "name": "baseIntersection.js"
            }
        ],
        "mainFile": ".internal/baseIntersection.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map"
        ]
    },
    "internal/base-is-equal": {
        "files": [
            {
                "relativePath": ".internal/baseIsEqual.js",
                "test": false,
                "name": "baseIsEqual.js"
            }
        ],
        "mainFile": ".internal/baseIsEqual.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like"
        ]
    },
    "internal/base-is-equal-deep": {
        "files": [
            {
                "relativePath": ".internal/baseIsEqualDeep.js",
                "test": false,
                "name": "baseIsEqualDeep.js"
            }
        ],
        "mainFile": ".internal/baseIsEqualDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects"
        ]
    },
    "internal/base-is-match": {
        "files": [
            {
                "relativePath": ".internal/baseIsMatch.js",
                "test": false,
                "name": "baseIsMatch.js"
            }
        ],
        "mainFile": ".internal/baseIsMatch.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal"
        ]
    },
    "internal/base-is-na-n": {
        "files": [
            {
                "relativePath": ".internal/baseIsNaN.js",
                "test": false,
                "name": "baseIsNaN.js"
            }
        ],
        "mainFile": ".internal/baseIsNaN.js",
        "origin": "AUTHORED"
    },
    "internal/base-matches": {
        "files": [
            {
                "relativePath": ".internal/baseMatches.js",
                "test": false,
                "name": "baseMatches.js"
            }
        ],
        "mainFile": ".internal/baseMatches.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal",
            "internal/base-is-match",
            "component/is-object",
            "internal/is-strict-comparable",
            "internal/get-match-data",
            "internal/matches-strict-comparable"
        ]
    },
    "internal/base-matches-property": {
        "files": [
            {
                "relativePath": ".internal/baseMatchesProperty.js",
                "test": false,
                "name": "baseMatchesProperty.js"
            }
        ],
        "mainFile": ".internal/baseMatchesProperty.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/hash",
            "internal/map-cache",
            "internal/stack",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array",
            "internal/equal-by-tag",
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys",
            "internal/equal-objects",
            "internal/base-is-equal-deep",
            "component/is-object-like",
            "internal/base-is-equal",
            "component/is-symbol",
            "internal/is-key",
            "component/is-object",
            "internal/is-strict-comparable",
            "internal/matches-strict-comparable",
            "internal/to-key",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/base-get",
            "component/get",
            "component/has-in"
        ]
    },
    "internal/base-merge-deep": {
        "files": [
            {
                "relativePath": ".internal/baseMergeDeep.js",
                "test": false,
                "name": "baseMergeDeep.js"
            }
        ],
        "mainFile": ".internal/baseMergeDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-merge-value",
            "internal/free-global",
            "internal/root",
            "internal/copy-array",
            "internal/is-prototype",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object",
            "component/is-buffer",
            "component/is-object",
            "component/is-plain-object",
            "internal/node-util",
            "component/is-typed-array",
            "component/to-plain-object",
            "internal/clone-typed-array",
            "internal/clone-buffer",
            "internal/clone-array-buffer",
            "internal/init-clone-object"
        ]
    },
    "internal/base-pick": {
        "files": [
            {
                "relativePath": ".internal/basePick.js",
                "test": false,
                "name": "basePick.js"
            }
        ],
        "mainFile": ".internal/basePick.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set",
            "internal/base-pick-by",
            "component/has-in"
        ]
    },
    "internal/base-pick-by": {
        "files": [
            {
                "relativePath": ".internal/basePickBy.js",
                "test": false,
                "name": "basePickBy.js"
            }
        ],
        "mainFile": ".internal/basePickBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set"
        ]
    },
    "internal/base-property": {
        "files": [
            {
                "relativePath": ".internal/baseProperty.js",
                "test": false,
                "name": "baseProperty.js"
            }
        ],
        "mainFile": ".internal/baseProperty.js",
        "origin": "AUTHORED"
    },
    "internal/base-property-deep": {
        "files": [
            {
                "relativePath": ".internal/basePropertyDeep.js",
                "test": false,
                "name": "basePropertyDeep.js"
            }
        ],
        "mainFile": ".internal/basePropertyDeep.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get"
        ]
    },
    "internal/base-property-of": {
        "files": [
            {
                "relativePath": ".internal/basePropertyOf.js",
                "test": false,
                "name": "basePropertyOf.js"
            }
        ],
        "mainFile": ".internal/basePropertyOf.js",
        "origin": "AUTHORED"
    },
    "internal/base-pull-all": {
        "files": [
            {
                "relativePath": ".internal/basePullAll.js",
                "test": false,
                "name": "basePullAll.js"
            }
        ],
        "mainFile": ".internal/basePullAll.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/base-index-of-with",
            "internal/copy-array",
            "component/map"
        ]
    },
    "internal/base-pull-at": {
        "files": [
            {
                "relativePath": ".internal/basePullAt.js",
                "test": false,
                "name": "basePullAt.js"
            }
        ],
        "mainFile": ".internal/basePullAt.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last",
            "internal/base-unset",
            "internal/is-index"
        ]
    },
    "internal/base-range": {
        "files": [
            {
                "relativePath": ".internal/baseRange.js",
                "test": false,
                "name": "baseRange.js"
            }
        ],
        "mainFile": ".internal/baseRange.js",
        "origin": "AUTHORED"
    },
    "internal/base-reduce": {
        "files": [
            {
                "relativePath": ".internal/baseReduce.js",
                "test": false,
                "name": "baseReduce.js"
            }
        ],
        "mainFile": ".internal/baseReduce.js",
        "origin": "AUTHORED"
    },
    "internal/base-set": {
        "files": [
            {
                "relativePath": ".internal/baseSet.js",
                "test": false,
                "name": "baseSet.js"
            }
        ],
        "mainFile": ".internal/baseSet.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/is-index",
            "internal/to-key",
            "component/is-object"
        ]
    },
    "internal/base-sort-by": {
        "files": [
            {
                "relativePath": ".internal/baseSortBy.js",
                "test": false,
                "name": "baseSortBy.js"
            }
        ],
        "mainFile": ".internal/baseSortBy.js",
        "origin": "AUTHORED"
    },
    "internal/base-sorted-index": {
        "files": [
            {
                "relativePath": ".internal/baseSortedIndex.js",
                "test": false,
                "name": "baseSortedIndex.js"
            }
        ],
        "mainFile": ".internal/baseSortedIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-sorted-index-by"
        ]
    },
    "internal/base-sorted-index-by": {
        "files": [
            {
                "relativePath": ".internal/baseSortedIndexBy.js",
                "test": false,
                "name": "baseSortedIndexBy.js"
            }
        ],
        "mainFile": ".internal/baseSortedIndexBy.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/base-sorted-uniq": {
        "files": [
            {
                "relativePath": ".internal/baseSortedUniq.js",
                "test": false,
                "name": "baseSortedUniq.js"
            }
        ],
        "mainFile": ".internal/baseSortedUniq.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/eq"
        ]
    },
    "internal/base-sum": {
        "files": [
            {
                "relativePath": ".internal/baseSum.js",
                "test": false,
                "name": "baseSum.js"
            }
        ],
        "mainFile": ".internal/baseSum.js",
        "origin": "AUTHORED"
    },
    "internal/base-to-number": {
        "files": [
            {
                "relativePath": ".internal/baseToNumber.js",
                "test": false,
                "name": "baseToNumber.js"
            }
        ],
        "mainFile": ".internal/baseToNumber.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/base-to-string": {
        "files": [
            {
                "relativePath": ".internal/baseToString.js",
                "test": false,
                "name": "baseToString.js"
            }
        ],
        "mainFile": ".internal/baseToString.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/base-uniq": {
        "files": [
            {
                "relativePath": ".internal/baseUniq.js",
                "test": false,
                "name": "baseUniq.js"
            }
        ],
        "mainFile": ".internal/baseUniq.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "internal/set-to-array",
            "internal/create-set"
        ]
    },
    "internal/base-unset": {
        "files": [
            {
                "relativePath": ".internal/baseUnset.js",
                "test": false,
                "name": "baseUnset.js"
            }
        ],
        "mainFile": ".internal/baseUnset.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice",
            "internal/parent",
            "component/last"
        ]
    },
    "internal/base-update": {
        "files": [
            {
                "relativePath": ".internal/baseUpdate.js",
                "test": false,
                "name": "baseUpdate.js"
            }
        ],
        "mainFile": ".internal/baseUpdate.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "internal/base-assign-value",
            "internal/assign-value",
            "internal/is-index",
            "component/is-object",
            "internal/base-set"
        ]
    },
    "internal/base-values": {
        "files": [
            {
                "relativePath": ".internal/baseValues.js",
                "test": false,
                "name": "baseValues.js"
            }
        ],
        "mainFile": ".internal/baseValues.js",
        "origin": "AUTHORED"
    },
    "internal/base-while": {
        "files": [
            {
                "name": "baseWhile.js",
                "relativePath": ".internal/baseWhile.js",
                "test": false
            }
        ],
        "mainFile": ".internal/baseWhile.js",
        "origin": "NESTED"
    },
    "internal/base-xor": {
        "files": [
            {
                "relativePath": ".internal/baseXor.js",
                "test": false,
                "name": "baseXor.js"
            }
        ],
        "mainFile": ".internal/baseXor.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of",
            "internal/array-includes",
            "internal/array-includes-with",
            "internal/cache-has",
            "component/map",
            "internal/base-difference",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/is-flattenable",
            "internal/base-flatten",
            "internal/set-to-array",
            "internal/create-set",
            "internal/base-uniq"
        ]
    },
    "internal/base-zip-object": {
        "files": [
            {
                "relativePath": ".internal/baseZipObject.js",
                "test": false,
                "name": "baseZipObject.js"
            }
        ],
        "mainFile": ".internal/baseZipObject.js",
        "origin": "AUTHORED"
    },
    "internal/cache-has": {
        "files": [
            {
                "relativePath": ".internal/cacheHas.js",
                "test": false,
                "name": "cacheHas.js"
            }
        ],
        "mainFile": ".internal/cacheHas.js",
        "origin": "AUTHORED"
    },
    "internal/cast-array-like-object": {
        "files": [
            {
                "relativePath": ".internal/castArrayLikeObject.js",
                "test": false,
                "name": "castArrayLikeObject.js"
            }
        ],
        "mainFile": ".internal/castArrayLikeObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-length",
            "component/is-array-like",
            "component/is-object-like",
            "component/is-array-like-object"
        ]
    },
    "internal/cast-path": {
        "files": [
            {
                "relativePath": ".internal/castPath.js",
                "test": false,
                "name": "castPath.js"
            }
        ],
        "mainFile": ".internal/castPath.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path"
        ]
    },
    "internal/cast-slice": {
        "files": [
            {
                "relativePath": ".internal/castSlice.js",
                "test": false,
                "name": "castSlice.js"
            }
        ],
        "mainFile": ".internal/castSlice.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice"
        ]
    },
    "internal/chars-end-index": {
        "files": [
            {
                "relativePath": ".internal/charsEndIndex.js",
                "test": false,
                "name": "charsEndIndex.js"
            }
        ],
        "mainFile": ".internal/charsEndIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of"
        ]
    },
    "internal/chars-start-index": {
        "files": [
            {
                "relativePath": ".internal/charsStartIndex.js",
                "test": false,
                "name": "charsStartIndex.js"
            }
        ],
        "mainFile": ".internal/charsStartIndex.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-find-index",
            "internal/base-is-na-n",
            "internal/strict-index-of",
            "internal/base-index-of"
        ]
    },
    "internal/clone-array-buffer": {
        "files": [
            {
                "relativePath": ".internal/cloneArrayBuffer.js",
                "test": false,
                "name": "cloneArrayBuffer.js"
            }
        ],
        "mainFile": ".internal/cloneArrayBuffer.js",
        "origin": "AUTHORED"
    },
    "internal/clone-buffer": {
        "files": [
            {
                "relativePath": ".internal/cloneBuffer.js",
                "test": false,
                "name": "cloneBuffer.js"
            }
        ],
        "mainFile": ".internal/cloneBuffer.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/free-global",
            "internal/root"
        ]
    },
    "internal/clone-data-view": {
        "files": [
            {
                "relativePath": ".internal/cloneDataView.js",
                "test": false,
                "name": "cloneDataView.js"
            }
        ],
        "mainFile": ".internal/cloneDataView.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/clone-array-buffer"
        ]
    },
    "internal/clone-reg-exp": {
        "files": [
            {
                "relativePath": ".internal/cloneRegExp.js",
                "test": false,
                "name": "cloneRegExp.js"
            }
        ],
        "mainFile": ".internal/cloneRegExp.js",
        "origin": "AUTHORED"
    },
    "internal/clone-symbol": {
        "files": [
            {
                "relativePath": ".internal/cloneSymbol.js",
                "test": false,
                "name": "cloneSymbol.js"
            }
        ],
        "mainFile": ".internal/cloneSymbol.js",
        "origin": "AUTHORED"
    },
    "internal/clone-typed-array": {
        "files": [
            {
                "relativePath": ".internal/cloneTypedArray.js",
                "test": false,
                "name": "cloneTypedArray.js"
            }
        ],
        "mainFile": ".internal/cloneTypedArray.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/clone-array-buffer"
        ]
    },
    "internal/compare-ascending": {
        "files": [
            {
                "relativePath": ".internal/compareAscending.js",
                "test": false,
                "name": "compareAscending.js"
            }
        ],
        "mainFile": ".internal/compareAscending.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/compare-multiple": {
        "files": [
            {
                "relativePath": ".internal/compareMultiple.js",
                "test": false,
                "name": "compareMultiple.js"
            }
        ],
        "mainFile": ".internal/compareMultiple.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/compare-ascending"
        ]
    },
    "internal/compose-args": {
        "files": [
            {
                "relativePath": ".internal/composeArgs.js",
                "test": false,
                "name": "composeArgs.js"
            }
        ],
        "mainFile": ".internal/composeArgs.js",
        "origin": "AUTHORED"
    },
    "internal/compose-args-right": {
        "files": [
            {
                "relativePath": ".internal/composeArgsRight.js",
                "test": false,
                "name": "composeArgsRight.js"
            }
        ],
        "mainFile": ".internal/composeArgsRight.js",
        "origin": "AUTHORED"
    },
    "internal/copy-array": {
        "files": [
            {
                "relativePath": ".internal/copyArray.js",
                "test": false,
                "name": "copyArray.js"
            }
        ],
        "mainFile": ".internal/copyArray.js",
        "origin": "AUTHORED"
    },
    "internal/copy-object": {
        "files": [
            {
                "relativePath": ".internal/copyObject.js",
                "test": false,
                "name": "copyObject.js"
            }
        ],
        "mainFile": ".internal/copyObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value"
        ]
    },
    "internal/copy-symbols": {
        "files": [
            {
                "relativePath": ".internal/copySymbols.js",
                "test": false,
                "name": "copySymbols.js"
            }
        ],
        "mainFile": ".internal/copySymbols.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/copy-object",
            "component/filter",
            "internal/get-symbols"
        ]
    },
    "internal/copy-symbols-in": {
        "files": [
            {
                "relativePath": ".internal/copySymbolsIn.js",
                "test": false,
                "name": "copySymbolsIn.js"
            }
        ],
        "mainFile": ".internal/copySymbolsIn.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-assign-value",
            "component/eq",
            "internal/assign-value",
            "internal/copy-object",
            "component/filter",
            "internal/get-symbols",
            "internal/get-symbols-in"
        ]
    },
    "internal/create-case-first": {
        "files": [
            {
                "relativePath": ".internal/createCaseFirst.js",
                "test": false,
                "name": "createCaseFirst.js"
            }
        ],
        "mainFile": ".internal/createCaseFirst.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array"
        ]
    },
    "internal/create-math-operation": {
        "files": [
            {
                "relativePath": ".internal/createMathOperation.js",
                "test": false,
                "name": "createMathOperation.js"
            }
        ],
        "mainFile": ".internal/createMathOperation.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-number",
            "internal/base-to-string"
        ]
    },
    "internal/create-padding": {
        "files": [
            {
                "relativePath": ".internal/createPadding.js",
                "test": false,
                "name": "createPadding.js"
            }
        ],
        "mainFile": ".internal/createPadding.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/base-to-string",
            "component/slice",
            "internal/cast-slice",
            "internal/has-unicode",
            "internal/ascii-size",
            "internal/unicode-size",
            "internal/string-size",
            "internal/ascii-to-array",
            "internal/unicode-to-array",
            "internal/string-to-array",
            "component/repeat"
        ]
    },
    "internal/create-range": {
        "files": [
            {
                "relativePath": ".internal/createRange.js",
                "test": false,
                "name": "createRange.js"
            }
        ],
        "mainFile": ".internal/createRange.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-range",
            "component/is-object",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "component/to-number",
            "component/to-finite"
        ]
    },
    "internal/create-round": {
        "files": [
            {
                "relativePath": ".internal/createRound.js",
                "test": false,
                "name": "createRound.js"
            }
        ],
        "mainFile": ".internal/createRound.js",
        "origin": "AUTHORED"
    },
    "internal/create-set": {
        "files": [
            {
                "relativePath": ".internal/createSet.js",
                "test": false,
                "name": "createSet.js"
            }
        ],
        "mainFile": ".internal/createSet.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/set-to-array"
        ]
    },
    "internal/deburr-letter": {
        "files": [
            {
                "relativePath": ".internal/deburrLetter.js",
                "test": false,
                "name": "deburrLetter.js"
            }
        ],
        "mainFile": ".internal/deburrLetter.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-property-of"
        ]
    },
    "internal/equal-arrays": {
        "files": [
            {
                "relativePath": ".internal/equalArrays.js",
                "test": false,
                "name": "equalArrays.js"
            }
        ],
        "mainFile": ".internal/equalArrays.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/cache-has",
            "component/some"
        ]
    },
    "internal/equal-by-tag": {
        "files": [
            {
                "relativePath": ".internal/equalByTag.js",
                "test": false,
                "name": "equalByTag.js"
            }
        ],
        "mainFile": ".internal/equalByTag.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "internal/set-cache",
            "internal/cache-has",
            "component/some",
            "internal/equal-arrays",
            "internal/map-to-array",
            "internal/set-to-array"
        ]
    },
    "internal/equal-objects": {
        "files": [
            {
                "relativePath": ".internal/equalObjects.js",
                "test": false,
                "name": "equalObjects.js"
            }
        ],
        "mainFile": ".internal/equalObjects.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys",
            "internal/get-all-keys"
        ]
    },
    "internal/free-global": {
        "files": [
            {
                "relativePath": ".internal/freeGlobal.js",
                "test": false,
                "name": "freeGlobal.js"
            }
        ],
        "mainFile": ".internal/freeGlobal.js",
        "origin": "AUTHORED"
    },
    "internal/get-all-keys": {
        "files": [
            {
                "relativePath": ".internal/getAllKeys.js",
                "test": false,
                "name": "getAllKeys.js"
            }
        ],
        "mainFile": ".internal/getAllKeys.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter",
            "internal/get-symbols",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "internal/get-all-keys-in": {
        "files": [
            {
                "relativePath": ".internal/getAllKeysIn.js",
                "test": false,
                "name": "getAllKeysIn.js"
            }
        ],
        "mainFile": ".internal/getAllKeysIn.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter",
            "internal/get-symbols",
            "internal/get-symbols-in"
        ]
    },
    "internal/get-holder": {
        "files": [
            {
                "relativePath": ".internal/getHolder.js",
                "test": false,
                "name": "getHolder.js"
            }
        ],
        "mainFile": ".internal/getHolder.js",
        "origin": "AUTHORED"
    },
    "internal/get-match-data": {
        "files": [
            {
                "relativePath": ".internal/getMatchData.js",
                "test": false,
                "name": "getMatchData.js"
            }
        ],
        "mainFile": ".internal/getMatchData.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object",
            "internal/is-strict-comparable",
            "internal/is-index",
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments",
            "internal/free-global",
            "internal/root",
            "component/is-buffer",
            "internal/node-util",
            "component/is-typed-array",
            "internal/array-like-keys",
            "component/is-length",
            "component/is-array-like",
            "component/keys"
        ]
    },
    "internal/get-symbols": {
        "files": [
            {
                "relativePath": ".internal/getSymbols.js",
                "test": false,
                "name": "getSymbols.js"
            }
        ],
        "mainFile": ".internal/getSymbols.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter"
        ]
    },
    "internal/get-symbols-in": {
        "files": [
            {
                "relativePath": ".internal/getSymbolsIn.js",
                "test": false,
                "name": "getSymbolsIn.js"
            }
        ],
        "mainFile": ".internal/getSymbolsIn.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/filter",
            "internal/get-symbols"
        ]
    },
    "internal/get-tag": {
        "files": [
            {
                "relativePath": ".internal/getTag.js",
                "test": false,
                "name": "getTag.js"
            }
        ],
        "mainFile": ".internal/getTag.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag"
        ]
    },
    "internal/has-unicode": {
        "files": [
            {
                "relativePath": ".internal/hasUnicode.js",
                "test": false,
                "name": "hasUnicode.js"
            }
        ],
        "mainFile": ".internal/hasUnicode.js",
        "origin": "AUTHORED"
    },
    "internal/init-clone-object": {
        "files": [
            {
                "relativePath": ".internal/initCloneObject.js",
                "test": false,
                "name": "initCloneObject.js"
            }
        ],
        "mainFile": ".internal/initCloneObject.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/is-prototype"
        ]
    },
    "internal/is-flattenable": {
        "files": [
            {
                "relativePath": ".internal/isFlattenable.js",
                "test": false,
                "name": "isFlattenable.js"
            }
        ],
        "mainFile": ".internal/isFlattenable.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-arguments"
        ]
    },
    "internal/is-index": {
        "files": [
            {
                "relativePath": ".internal/isIndex.js",
                "test": false,
                "name": "isIndex.js"
            }
        ],
        "mainFile": ".internal/isIndex.js",
        "origin": "AUTHORED"
    },
    "internal/is-key": {
        "files": [
            {
                "relativePath": ".internal/isKey.js",
                "test": false,
                "name": "isKey.js"
            }
        ],
        "mainFile": ".internal/isKey.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/is-prototype": {
        "files": [
            {
                "relativePath": ".internal/isPrototype.js",
                "test": false,
                "name": "isPrototype.js"
            }
        ],
        "mainFile": ".internal/isPrototype.js",
        "origin": "AUTHORED"
    },
    "internal/is-strict-comparable": {
        "files": [
            {
                "relativePath": ".internal/isStrictComparable.js",
                "test": false,
                "name": "isStrictComparable.js"
            }
        ],
        "mainFile": ".internal/isStrictComparable.js",
        "origin": "AUTHORED",
        "dependencies": [
            "component/is-object"
        ]
    },
    "internal/iterator-to-array": {
        "files": [
            {
                "relativePath": ".internal/iteratorToArray.js",
                "test": false,
                "name": "iteratorToArray.js"
            }
        ],
        "mainFile": ".internal/iteratorToArray.js",
        "origin": "AUTHORED"
    },
    "internal/map-to-array": {
        "files": [
            {
                "relativePath": ".internal/mapToArray.js",
                "test": false,
                "name": "mapToArray.js"
            }
        ],
        "mainFile": ".internal/mapToArray.js",
        "origin": "AUTHORED"
    },
    "internal/matches-strict-comparable": {
        "files": [
            {
                "relativePath": ".internal/matchesStrictComparable.js",
                "test": false,
                "name": "matchesStrictComparable.js"
            }
        ],
        "mainFile": ".internal/matchesStrictComparable.js",
        "origin": "AUTHORED"
    },
    "internal/memoize-capped": {
        "files": [
            {
                "relativePath": ".internal/memoizeCapped.js",
                "test": false,
                "name": "memoizeCapped.js"
            }
        ],
        "mainFile": ".internal/memoizeCapped.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize"
        ]
    },
    "internal/meta-map": {
        "files": [
            {
                "relativePath": ".internal/metaMap.js",
                "test": false,
                "name": "metaMap.js"
            }
        ],
        "mainFile": ".internal/metaMap.js",
        "origin": "AUTHORED"
    },
    "internal/node-util": {
        "files": [
            {
                "relativePath": ".internal/nodeUtil.js",
                "test": false,
                "name": "nodeUtil.js"
            }
        ],
        "mainFile": ".internal/nodeUtil.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/free-global"
        ]
    },
    "internal/parent": {
        "files": [
            {
                "relativePath": ".internal/parent.js",
                "test": false,
                "name": "parent.js"
            }
        ],
        "mainFile": ".internal/parent.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol",
            "internal/is-key",
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped",
            "internal/string-to-path",
            "internal/cast-path",
            "internal/to-key",
            "internal/base-get",
            "component/slice"
        ]
    },
    "internal/re-escape": {
        "files": [
            {
                "relativePath": ".internal/reEscape.js",
                "test": false,
                "name": "reEscape.js"
            }
        ],
        "mainFile": ".internal/reEscape.js",
        "origin": "AUTHORED"
    },
    "internal/re-evaluate": {
        "files": [
            {
                "relativePath": ".internal/reEvaluate.js",
                "test": false,
                "name": "reEvaluate.js"
            }
        ],
        "mainFile": ".internal/reEvaluate.js",
        "origin": "AUTHORED"
    },
    "internal/re-interpolate": {
        "files": [
            {
                "relativePath": ".internal/reInterpolate.js",
                "test": false,
                "name": "reInterpolate.js"
            }
        ],
        "mainFile": ".internal/reInterpolate.js",
        "origin": "AUTHORED"
    },
    "internal/root": {
        "files": [
            {
                "relativePath": ".internal/root.js",
                "test": false,
                "name": "root.js"
            }
        ],
        "mainFile": ".internal/root.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/free-global"
        ]
    },
    "internal/set-to-array": {
        "files": [
            {
                "relativePath": ".internal/setToArray.js",
                "test": false,
                "name": "setToArray.js"
            }
        ],
        "mainFile": ".internal/setToArray.js",
        "origin": "AUTHORED"
    },
    "internal/set-to-pairs": {
        "files": [
            {
                "relativePath": ".internal/setToPairs.js",
                "test": false,
                "name": "setToPairs.js"
            }
        ],
        "mainFile": ".internal/setToPairs.js",
        "origin": "AUTHORED"
    },
    "internal/set-to-string": {
        "files": [
            {
                "relativePath": ".internal/setToString.js",
                "test": false,
                "name": "setToString.js"
            }
        ],
        "mainFile": ".internal/setToString.js",
        "origin": "AUTHORED"
    },
    "internal/strict-index-of": {
        "files": [
            {
                "relativePath": ".internal/strictIndexOf.js",
                "test": false,
                "name": "strictIndexOf.js"
            }
        ],
        "mainFile": ".internal/strictIndexOf.js",
        "origin": "AUTHORED"
    },
    "internal/strict-last-index-of": {
        "files": [
            {
                "relativePath": ".internal/strictLastIndexOf.js",
                "test": false,
                "name": "strictLastIndexOf.js"
            }
        ],
        "mainFile": ".internal/strictLastIndexOf.js",
        "origin": "AUTHORED"
    },
    "internal/string-size": {
        "files": [
            {
                "relativePath": ".internal/stringSize.js",
                "test": false,
                "name": "stringSize.js"
            }
        ],
        "mainFile": ".internal/stringSize.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/ascii-size",
            "internal/has-unicode",
            "internal/unicode-size"
        ]
    },
    "internal/string-to-array": {
        "files": [
            {
                "relativePath": ".internal/stringToArray.js",
                "test": false,
                "name": "stringToArray.js"
            }
        ],
        "mainFile": ".internal/stringToArray.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/ascii-to-array",
            "internal/has-unicode",
            "internal/unicode-to-array"
        ]
    },
    "internal/string-to-path": {
        "files": [
            {
                "relativePath": ".internal/stringToPath.js",
                "test": false,
                "name": "stringToPath.js"
            }
        ],
        "mainFile": ".internal/stringToPath.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/hash",
            "component/eq",
            "internal/assoc-index-of",
            "internal/list-cache",
            "internal/map-cache",
            "component/memoize",
            "internal/memoize-capped"
        ]
    },
    "internal/to-key": {
        "files": [
            {
                "relativePath": ".internal/toKey.js",
                "test": false,
                "name": "toKey.js"
            }
        ],
        "mainFile": ".internal/toKey.js",
        "origin": "AUTHORED",
        "dependencies": [
            "internal/base-get-tag",
            "internal/get-tag",
            "component/is-symbol"
        ]
    },
    "internal/unicode-size": {
        "files": [
            {
                "relativePath": ".internal/unicodeSize.js",
                "test": false,
                "name": "unicodeSize.js"
            }
        ],
        "mainFile": ".internal/unicodeSize.js",
        "origin": "AUTHORED"
    },
    "internal/unicode-to-array": {
        "files": [
            {
                "relativePath": ".internal/unicodeToArray.js",
                "test": false,
                "name": "unicodeToArray.js"
            }
        ],
        "mainFile": ".internal/unicodeToArray.js",
        "origin": "AUTHORED"
    },
    "internal/unicode-words": {
        "files": [
            {
                "relativePath": ".internal/unicodeWords.js",
                "test": false,
                "name": "unicodeWords.js"
            }
        ],
        "mainFile": ".internal/unicodeWords.js",
        "origin": "AUTHORED"
    },
    "component/slice": {
        "files": [
            {
                "relativePath": "slice.js",
                "test": false,
                "name": "slice.js"
            }
        ],
        "mainFile": "slice.js",
        "origin": "AUTHORED"
    }
}